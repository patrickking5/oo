import DynamicHeader from "@/components/DynamicHeader";
import DynamicToolbar from "@/components/DynamicToolbar";
import ThemeRegistry from "@/components/ThemeRegistry";
import { HeaderProvider } from "@/context/HeaderContext";
import { ImgContextProvider } from "@/context/ImgContext";
import { ItemContextProvider } from "@/context/ItemContext";
import { StatsContextProvider } from "@/context/StatsContext";
import { Box } from "@mui/material";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { loadImgData } from "./utils/loadImgData";
import { loadOpensData } from "./utils/loadOpensData";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Oll Open",
  description: "Generated by create next app",
  manifest: "/manifest.json",
};

export function generateViewport() {
  return {
    themeColor: "#000000",
  };
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const allData = loadOpensData(); // Call the function directly here
  const jsonData = {
    opens_data: allData.opens_data,
    live_open_data: allData.live_open_data,
  };
  const statsData = allData.stats_data;
  const imgData = loadImgData();

  const drawerWidth = 135;
  const toolbarHeight = 105;
  return (
    <html lang="en" style={{ background: "#000000", color: "#ededed" }}>
      <head>
        {/* <link rel="manifest" href="/manifest.json" /> */}
        <meta name="Oll Open" content="Oll Open" />
        <meta name="theme-color" content="#000000" />
        {/* <link rel="apple-touch-icon" href="/icons/icon-192x192.png" /> */}
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <ThemeRegistry>
          <ItemContextProvider value={jsonData}>
            <StatsContextProvider value={statsData}>
              <ImgContextProvider value={imgData}>
                <DynamicToolbar toolbarHeight={toolbarHeight} />
                {/* Spacer for fixed bottom bar */}
                <Box
                  sx={{
                    backgroundColor: "black",
                    height: "100%",
                    width: "100%",
                    pb: `${toolbarHeight + 30}px`,
                    // mt: { xs: 7, sm: 8 },
                    // pl: { sm: "135px" }, // Padding left for drawer
                    border: 0,
                  }}
                >
                  <HeaderProvider>
                    <DynamicHeader />
                    {children}
                  </HeaderProvider>
                </Box>
              </ImgContextProvider>
            </StatsContextProvider>
          </ItemContextProvider>
        </ThemeRegistry>
      </body>
    </html>
  );
}
